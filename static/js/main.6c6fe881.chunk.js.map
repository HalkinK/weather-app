{"version":3,"sources":["components/SearchBar.js","components/WeatherInfo.js","components/UserLocation.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","state","cityName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","alert","this","type","name","onChange","React","Component","WeatherInfo","weather","temp","prevProps","prevState","prevName","nextName","fetch","then","responce","json","main","coldStyle","backgroundColor","middleStyle","hotStyle","map","description","icon","style","Math","round","src","alt","UserLocation","useState","setWeather","lat","setLat","lon","setLon","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","App","handleFormSubmit","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c6fe881.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class SearchBar extends React.Component {\n  state = {\n    cityName: \"\",\n  };\n\n  handleNameChange = (event) => {\n    this.setState({ cityName: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.cityName.trim() === \"\") {\n      alert(\"Please enter your city\");\n      return;\n    }\n\n    this.props.onSubmit(this.state.cityName);\n    this.setState({ cityName: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"cityName\"\n          value={this.state.cityName}\n          onChange={this.handleNameChange}\n        />\n        <button type=\"submit\">Show weather</button>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class WeatherInfo extends React.Component {\n  state = {\n    weather: null,\n    temp: 0,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.cityName;\n    const nextName = this.props.cityName;\n\n    if (prevName !== nextName) {\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${nextName}&appid=af0f9a3d3acf15b4d50d288abcbabfde&units=metric`\n      )\n        .then((responce) => responce.json())\n        .then((weather) => this.setState({ weather, temp: weather.main.temp }));\n    }\n  }\n\n  render() {\n    const coldStyle = { backgroundColor: \"#00ffff\" };\n    const middleStyle = { backgroundColor: \"#fff700\" };\n    const hotStyle = { backgroundColor: \"#ff8c00\" };\n    return (\n      <>\n        {this.state.weather && (\n          <>\n            {this.state.weather.weather.map(({ description, icon, main }) => (\n              <div\n                style={\n                  Math.round(this.state.weather.main.temp) < 10\n                    ? coldStyle\n                    : Math.round(this.state.weather.main.temp) >= 10 &&\n                      Math.round(this.state.weather.main.temp) <= 29\n                    ? middleStyle\n                    : hotStyle\n                }\n              >\n                <h1>{this.state.weather.name}</h1>\n                <img\n                  src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\n                  alt={description}\n                ></img>\n                <h2>{Math.round(this.state.weather.main.temp)} °C</h2>\n                <p>\n                  {main}: {description}\n                </p>\n              </div>\n            ))}\n          </>\n        )}\n      </>\n    );\n  }\n}\n","import { useState, useEffect } from \"react\";\n\nexport default function UserLocation() {\n  const [weather, setWeather] = useState(null);\n  const [lat, setLat] = useState(\"\");\n  const [lon, setLon] = useState(\"\");\n  //   const [temp, setTemp] = useState(0);\n\n  const coldStyle = { backgroundColor: \"#00ffff\" };\n  const middleStyle = { backgroundColor: \"#fff700\" };\n  const hotStyle = { backgroundColor: \"#ff8c00\" };\n\n  useEffect(() => {\n    const fetchData = () => {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLat(position.coords.latitude);\n        setLon(position.coords.longitude);\n      });\n    };\n\n    if (lat && lon) {\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=af0f9a3d3acf15b4d50d288abcbabfde&units=metric`\n      )\n        .then((responce) => responce.json())\n        .then((weather) => {\n          setWeather(weather);\n          //   setTemp(weather.main.temp);\n        });\n    }\n    fetchData();\n  }, [lat, lon]);\n\n  return (\n    <>\n      {weather && (\n        <>\n          {weather.weather.map(({ description, icon, main }) => (\n            <div\n              style={\n                Math.round(weather.main.temp) < 10\n                  ? coldStyle\n                  : Math.round(weather.main.temp) >= 10 &&\n                    Math.round(weather.main.temp) <= 29\n                  ? middleStyle\n                  : hotStyle\n              }\n            >\n              <h1>{weather.name}</h1>\n              <img\n                src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\n                alt={description}\n              ></img>\n              <h2>{Math.round(weather.main.temp)} °C</h2>\n              <p>\n                {main}: {description}\n              </p>\n            </div>\n          ))}\n        </>\n      )}\n    </>\n  );\n}\n","// import logo from \"./logo.svg\";\nimport React from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"./components/SearchBar\";\nimport WeatherInfo from \"./components/WeatherInfo\";\nimport UserLocation from \"./components/UserLocation\";\n\nexport default class App extends React.Component {\n  state = {\n    cityName: \"\",\n  };\n\n  handleFormSubmit = (cityName) => {\n    this.setState({ cityName });\n  };\n\n  render() {\n    return (\n      <div className=\"weather-container\">\n        <SearchBar onSubmit={this.handleFormSubmit} />\n        {this.state.cityName === \"\" && <UserLocation />}\n\n        <WeatherInfo cityName={this.state.cityName} />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}