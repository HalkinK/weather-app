{"version":3,"sources":["components/ColorsOptions.module.css","components/SearchBar.js","components/ColorsBase.js","components/WeatherInfo.js","components/UserLocation.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SearchBar","onSubmit","useState","cityName","setCityName","event","preventDefault","trim","alert","type","name","value","onChange","currentTarget","toLowerCase","colorOptions","temp","backgroundColor","WeatherInfo","weather","setWeather","useEffect","fetch","then","responce","json","catch","error","document","location","reload","map","description","icon","main","id","style","Math","round","styles","coldStyle","find","el","hotStyle","src","alt","UserLocation","lat","setLat","lon","setLon","console","warn","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3da11c8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"coldStyle\":\"ColorsOptions_coldStyle__2ivgi\",\"hotStyle\":\"ColorsOptions_hotStyle__2GToq\"};","import { useState } from \"react\";\n\nexport default function SearchBar({ onSubmit }) {\n  const [cityName, setCityName] = useState(\"\");\n\n  const handleNameChange = (event) => {\n    setCityName(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (cityName.trim() === \"\") {\n      alert(\"Please enter your city\");\n      return;\n    }\n\n    onSubmit(cityName);\n    setCityName(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"cityName\"\n        value={cityName}\n        onChange={handleNameChange}\n      />\n      <button type=\"submit\">Show weather</button>\n    </form>\n  );\n}\n","export const colorOptions = [\n  { temp: -10, backgroundColor: \"#00ffff\" },\n  { temp: -9, backgroundColor: \"#18fee7\" },\n  { temp: -8, backgroundColor: \"#24fedb\" },\n  { temp: -7, backgroundColor: \"#31fdce\" },\n  { temp: -6, backgroundColor: \"#3dfdc2\" },\n  { temp: -5, backgroundColor: \"#49fdb6\" },\n  { temp: -4, backgroundColor: \"#55fcaa\" },\n  { temp: -3, backgroundColor: \"#61fc9e\" },\n  { temp: -2, backgroundColor: \"#6dfc92\" },\n  { temp: -1, backgroundColor: \"#79fb86\" },\n  { temp: 0, backgroundColor: \"#86fb79\" },\n  { temp: 1, backgroundColor: \"#92fa6d\" },\n  { temp: 2, backgroundColor: \"#9efa61\" },\n  { temp: 3, backgroundColor: \"#aafa55\" },\n  { temp: 4, backgroundColor: \"#b6f949\" },\n  { temp: 5, backgroundColor: \"#c2f93d\" },\n  { temp: 6, backgroundColor: \"#cef931\" },\n  { temp: 7, backgroundColor: \"#dbf824\" },\n  { temp: 8, backgroundColor: \"#e7f818\" },\n  { temp: 9, backgroundColor: \"#f3f70c\" },\n  { temp: 10, backgroundColor: \"#fff700\" },\n  { temp: 11, backgroundColor: \"#ffed00\" },\n  { temp: 12, backgroundColor: \"#ffe800\" },\n  { temp: 13, backgroundColor: \"#ffe300\" },\n  { temp: 14, backgroundColor: \"#ffde00\" },\n  { temp: 15, backgroundColor: \"#ffd800\" },\n  { temp: 16, backgroundColor: \"#ffd300\" },\n  { temp: 17, backgroundColor: \"#ffce00\" },\n  { temp: 18, backgroundColor: \"#ffc900\" },\n  { temp: 19, backgroundColor: \"#ffc400\" },\n  { temp: 20, backgroundColor: \"#ffbf00\" },\n  { temp: 21, backgroundColor: \"#ffba00\" },\n  { temp: 22, backgroundColor: \"#ffb500\" },\n  { temp: 23, backgroundColor: \"#ffb000\" },\n  { temp: 24, backgroundColor: \"#ffab00\" },\n  { temp: 25, backgroundColor: \"#ffa500\" },\n  { temp: 26, backgroundColor: \"#ffa000\" },\n  { temp: 27, backgroundColor: \"#ff9b00\" },\n  { temp: 28, backgroundColor: \"#ff9600\" },\n  { temp: 29, backgroundColor: \"#ff9100\" },\n  { temp: 30, backgroundColor: \"#ff8c00\" },\n];\n","import { useState, useEffect } from \"react\";\nimport { colorOptions } from \"./ColorsBase\";\nimport styles from \"./ColorsOptions.module.css\";\n\nexport default function WeatherInfo({ cityName }) {\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    if (!cityName) {\n      return;\n    }\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=af0f9a3d3acf15b4d50d288abcbabfde&units=metric`\n    )\n      .then((responce) => responce.json())\n      .then((weather) => setWeather(weather))\n      .catch((error) => {\n        alert(\"Please enter valid city name\");\n        document.location.reload();\n      });\n  }, [cityName]);\n\n  return (\n    <>\n      {weather?.weather?.map(({ description, icon, main, id }) => (\n        <div\n          key={id}\n          style={\n            Math.round(weather.main.temp) < -10\n              ? styles.coldStyle\n              : Math.round(weather.main.temp) >= -10 &&\n                Math.round(weather.main.temp) <= 30\n              ? colorOptions.find(\n                  (el) => el.temp === Math.round(weather.main.temp)\n                )\n              : styles.hotStyle\n          }\n        >\n          <h1>{weather.name}</h1>\n          <img\n            src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\n            alt={description}\n          ></img>\n          <h2>{Math.round(weather.main.temp)} Â°C</h2>\n          <p>\n            {main}: {description}\n          </p>\n        </div>\n      ))}\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { colorOptions } from \"./ColorsBase\";\nimport styles from \"./ColorsOptions.module.css\";\n\nexport default function UserLocation() {\n  const [weather, setWeather] = useState(null);\n  const [lat, setLat] = useState(\"\");\n  const [lon, setLon] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = () => {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLat(position.coords.latitude);\n        setLon(position.coords.longitude);\n      });\n    };\n\n    if (lat && lon) {\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=af0f9a3d3acf15b4d50d288abcbabfde&units=metric`\n      )\n        .then((responce) => responce.json())\n        .then((weather) => setWeather(weather))\n        .catch((error) => console.warn(error));\n    }\n    fetchData();\n  }, [lat, lon]);\n\n  return (\n    <>\n      {weather?.weather?.map(({ description, icon, main, id }) => (\n        <div\n          key={id}\n          style={\n            Math.round(weather.main.temp) < -10\n              ? styles.coldStyle\n              : Math.round(weather.main.temp) >= -10 &&\n                Math.round(weather.main.temp) <= 30\n              ? colorOptions.find(\n                  (el) => el.temp === Math.round(weather.main.temp)\n                )\n              : styles.hotStyle\n          }\n        >\n          <h1>{weather.name}</h1>\n          <img\n            src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\n            alt={description}\n          ></img>\n          <h2>{Math.round(weather.main.temp)} Â°C</h2>\n          <p>\n            {main}: {description}\n          </p>\n        </div>\n      ))}\n    </>\n  );\n}\n","// import logo from \"./logo.svg\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"./components/SearchBar\";\nimport WeatherInfo from \"./components/WeatherInfo\";\nimport UserLocation from \"./components/UserLocation\";\n\nexport default function App() {\n  const [cityName, setCityName] = useState(\"\");\n\n  const handleFormSubmit = (cityName) => {\n    setCityName(cityName);\n  };\n\n  return (\n    <div className=\"weather-container\">\n      <SearchBar onSubmit={handleFormSubmit} />\n      {!cityName && <UserLocation />}\n      <WeatherInfo cityName={cityName} />\n    </div>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}